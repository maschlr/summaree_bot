"""invoice logic

Revision ID: 69d04b0ec234
Revises: 43fa1a46e6c2
Create Date: 2023-08-05 16:16:13.409973

"""
from datetime import datetime

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "69d04b0ec234"
down_revision = "43fa1a46e6c2"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    product_table = op.create_table(
        "product",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("premium_period", sa.Enum("MONTH", "THREE_MONTHS", "YEAR", name="premiumperiod"), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_product")),
    )

    now = datetime.now()
    op.bulk_insert(
        product_table,
        [
            {
                "id": 1,
                "premium_period": "MONTH",
                "description": "Premium Subscription for 1 month (€)",
                "price": 199,
                "currency": "EUR",
                "active": True,
                "created_at": now,
                "updated_at": now,
            },
            {
                "id": 2,
                "premium_period": "THREE_MONTHS",
                "description": "Premium Subscription for 3 months (€)",
                "price": 420,
                "currency": "EUR",
                "active": True,
                "created_at": now,
                "updated_at": now,
            },
            {
                "id": 3,
                "premium_period": "YEAR",
                "description": "Premium Subscription for 1 year (€)",
                "price": 999,
                "currency": "EUR",
                "active": True,
                "created_at": now,
                "updated_at": now,
            },
        ],
    )

    op.create_table(
        "invoice",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("status", sa.Enum("draft", "paid", "canceled", name="invoicestatus"), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("chat_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("subscription_id", sa.Integer(), nullable=True),
        sa.Column("payment_provider", sa.Enum("STRIPE", name="paymentprovider"), nullable=False),
        sa.Column("provider_payment_charge_id", sa.String(), nullable=True),
        sa.Column("telegram_payment_charge_id", sa.String(), nullable=True),
        sa.Column("currency", sa.String(), nullable=True),
        sa.Column("total_amount", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["chat_id"], ["telegram_chat.id"], name=op.f("fk_invoice_chat_id_telegram_chat")),
        sa.ForeignKeyConstraint(["product_id"], ["product.id"], name=op.f("fk_invoice_product_id_product")),
        sa.ForeignKeyConstraint(
            ["subscription_id"], ["subscription.id"], name=op.f("fk_invoice_subscription_id_subscription")
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_invoice_user_id_user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_invoice")),
    )
    op.drop_column("user", "is_premium")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user", sa.Column("is_premium", sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_table("invoice")
    op.drop_table("product")
    op.execute("DROP TYPE premiumperiod;")
    op.execute("DROP TYPE invoicestatus;")
    # ### end Alembic commands ###
